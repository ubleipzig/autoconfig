#!/usr/bin/env node
'use strict';

var program = require('commander')
	, Q = require('q')
	, _ = require('underscore')
	, path = require('path')
	, configtools = require('../lib/vufind2/configtools')
	, grunttools = require('../lib/vufind2/grunttools')
;

program
	.usage('[options] <site ...>')
	.option('-b, --basedir [value]', 'where the configuration is saved', '/usr/local/vufind2/')
	.option('-i, --instance <value>', 'the instance to set up', /^(alpha|staging|live)$/i)
	.option('-c, --configs [value]', 'the folder with default overrides. they must follow the naming convention isil.json', path.join(process.env.HOME, '.autoconfig/'))
	.option('-w, --write', 'writes the autogenerated values to defaults <site>.json')
	.option('-f, --force', 'forces rewriting of database user according defaults, despite of autogenerated or overridden')
	.option('-d, --drop', 'forces dropping of existing database')
	.option('--skip-config', 'skip generating config')
	.option('--skip-grunt', 'skip performing grunt processing')
	.option('--db-server [value]', 'the host that runs the db server', 'localhost')
	.option('--db-client [value]', 'the host which the db server sees the db client as', 'localhost')
	.option('--solr-url [value]', 'the url to the solr', 'http://172.18.113.250:8080/solr')
	.option('--ai-url [value]', 'the url to the article-index', 'ai.ub.uni-leipzig.de/solr/biblio')
	.option('-u, --url [value]', 'the url of this site', 'https://staging.finc.info/vufind2/')
	.parse(process.argv);

if (!program.instance) {
	console.error('please specify the instance to set up');
	process.exit(1);
}

if (!program.args) {
	console.error('please specify at least one site to set up');
}

Q.all(_.map(program.args, function (site) {
	return Q.all([
		configtools.fetchDefaults(site),
		configtools.findParentConfigs(site),
		configtools.findParentLanguages(site),
		grunttools.foundation(site)
	]).then(function (result) {
		return configtools.createConfigs(site, result[0], result[1], result[2]);
	}).then(function(result) {
		return configtools.updateDefaults(site, result);
	}).catch(function (err) {
		console.error('could not configure site ' + site);
		console.error(err);
	});
})).then(function (result) {
	console.log('processed ' + result.length + ' sites');
});