stages:
  - test
  - publish
  - mirror

npm_run_ci:
  stage: test
  image: node:8
  services:
  - name: mariadb:10
    alias: db
  script:
  - test -d .npm && mv .npm ${HOME}
  - npm install
  - npm run ci
  - mv ${HOME}/.npm .
  variables:
    NODE_ENV: "test"
    MYSQL_HOST: "db"
    MYSQL_PORT: "3306"
    MYSQL_ROOT_PASSWORD: adminpw
  cache:
    key: ${CI_PROJECT_ID}
    paths:
    - .npm
  tags:
  - docker
  except:
  - tags
  - /^gh-pages/


npm_publish:
  stage: publish
  image: node:8
  script:
  - 'echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc'
  - npm publish --access public
  tags:
  - docker
  only:
  - /^release\//
  except:
  - branches

  cache:
    key: "${CI_PROJECT_ID}"
    paths:
    - .npm

gh_pages:
  stage: publish
  image:
    name: squidfunk/mkdocs-material:2.7.2
    entrypoint: [ "/bin/sh", "-c" ]
  only:
  - /^master/
  script: |
    git remote set-url origin https://${GITLAB_USER}:${GITLAB_TOKEN}@git.sc.uni-leipzig.de/ubl/bdd_dev/autoconfig.git
    mkdocs gh-deploy
  tags:
  - docker

github_mirror:
  stage: mirror
  image:
    name: alpine/git
    entrypoint: [ "/bin/sh", "-c" ]
  variables:
    GIT_STRATEGY: clone
    GIT_CHECKOUT: "false"
  script: |
    cd /tmp
    git clone --mirror ${CI_REPOSITORY_URL} project
    cd project
    git remote add github https://${GITHUB_USER}:${GITHUB_TOKEN}@github.com/ubleipzig/autoconfig.git
    git push --mirror github
  tags:
  - docker
